# Application Install
# - name: SYSTEM | Create drupal system user
#   user: name="{{ drupal_sysuser }}" comment="drupal"

- name: PRE INSTALL | check if drupal installed
  stat:
    path: "{{ www_doc_root }}/drupal"
  register: drupal_installed
  ignore_errors: True


- debug:
    msg: "Path exists and is a directory"
  when: drupal_installed.stat.isdir is defined and drupal_installed.stat.isdir

- debug:
    msg: "Path DOES NOT exists"
  when: drupal_installed.stat.isdir is not defined

- debug:
    msg: "Path exists but is not a directory"
  when: drupal_installed.stat.isdir is defined and not drupal_installed.stat.isdir
  
- name: DEBUG
  debug: msg="content of drupal_installed {{ drupal_installed }}"

- block:
  - name: INSTALL | Download drupal
    # unarchive is new in 2.0, and remote_src requires 2.2. For older versions, use 'get_url' and 'unarchive'
    # unarchive: remote_src=yes src="{{ LATEST_MM_URL }}" dest="/home/{{ mattermost_sysuser }}/"
    get_url: url={{ DRUPAL_DOWNLOAD_URL }} dest="/tmp/drupal.tar.gz"

  - name: INSTALL | Unarchive drupal
    unarchive: 
      copy=no
      src="/tmp/drupal.tar.gz"
      dest="{{ www_doc_root }}"
      owner=www-data
      group=www-data

  - name: INSTALL | Rename directory to no-version name
    file: 
      src="{{ www_doc_root }}/{{ DRUPAL_UNCOMPRESSED_VERSIONED_DIRECTORY }}"
      dest="{{ www_doc_root }}/drupal"

  when: drupal_installed.stat.isdir is not defined
  # - name: INSTALL | Ensure Drupal directory exists
  #   file: path={{ www_doc_root }}/drupal state=directory mode=0755 owner="{{ mattermost_sysuser }}"

  #   - name: INSTALL | Set up main Mattermost config file
  #     template: src=mattermost_config.json dest="{{ mattermost_directory }}/config/config.json"

  #   - name: INSTALL | Remove downloaded mattermost.tar.gz
  #     file: path=/home/{{ mattermost_sysuser }}/mattermost.tar.gz state=absent
    
  #   - name: INSTALL | Set proper permissions on mattermost app directory
  #     file:
  #       path: "{{ mattermost_directory }}"
  #       # mode: 0755
  #       owner: "{{ mattermost_sysuser }}"
  #       group: "{{ mattermost_sysuser }}"
  #       recurse: yes

  #   - name: MATTERMOST | Create systemd unit file
  #     template: src=mattermost.service dest=/etc/systemd/system/mattermost.service
  #     notify:
  #       - reload systemd

  #   # Perhaps this would make more sense *outside* of this task block?
  #   - name: MATTERMOST | Mattermost should be running, and enabled at boot
  #     service: name=mattermost state=started enabled=yes
  #     notify:
  #       - reload nginx
 
  # # Only execute the above task block if we don't already have a Mattermost install directory
  # when: mattermost_install.stat.exists == False

