# Application Install
# - name: SYSTEM | Create drupal system user
#   user: name="{{ drupal_sysuser }}" comment="drupal"

- name: INSTALL | create drupal directory
  file: path="{{ drupal_directory }}" state=directory

- block:
    - name: INSTALL | Download and extract drupal
      # unarchive is new in 2.0, and remote_src requires 2.2. For older versions, use 'get_url' and 'unarchive'
      # unarchive: remote_src=yes src="{{ LATEST_MM_URL }}" dest="/home/{{ mattermost_sysuser }}/"
      get_url: url={{ DRUPAL_DOWNLOAD_URL }} dest="{{ drupal_directory }}/drupal.tar.gz"

    - name: INSTALL | Unarchive drupal
      unarchive: 
        copy=no src="{{ drupal_directory }}/drupal.tar.gz"
        dest="{{ drupal_directory }}/"
        owner=www-data
        group=www-data
      
    - name: INSTALL | Link uncompressed directory to no-version name
      file: 
        src="{{ drupal_directory }}/{{ DRUPAL_UNCOMPRESSED_VERSIONED_DIRECTORY }}"
        dest="{{ drupal_directory }}/drupal"
        state=link
        force=yes

  #   - name: INSTALL | Ensure Mattermost appdata directory exists
  #     file: path={{ mattermost_directory }}/data state=directory mode=0755 owner="{{ mattermost_sysuser }}"

  #   - name: INSTALL | Set up main Mattermost config file
  #     template: src=mattermost_config.json dest="{{ mattermost_directory }}/config/config.json"

  #   - name: INSTALL | Remove downloaded mattermost.tar.gz
  #     file: path=/home/{{ mattermost_sysuser }}/mattermost.tar.gz state=absent
    
  #   - name: INSTALL | Set proper permissions on mattermost app directory
  #     file:
  #       path: "{{ mattermost_directory }}"
  #       # mode: 0755
  #       owner: "{{ mattermost_sysuser }}"
  #       group: "{{ mattermost_sysuser }}"
  #       recurse: yes

  #   - name: MATTERMOST | Create systemd unit file
  #     template: src=mattermost.service dest=/etc/systemd/system/mattermost.service
  #     notify:
  #       - reload systemd

  #   # Perhaps this would make more sense *outside* of this task block?
  #   - name: MATTERMOST | Mattermost should be running, and enabled at boot
  #     service: name=mattermost state=started enabled=yes
  #     notify:
  #       - reload nginx
 
  # # Only execute the above task block if we don't already have a Mattermost install directory
  # when: mattermost_install.stat.exists == False

